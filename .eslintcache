[{"D:\\Documentos\\Bootcamp\\recipi\\src\\index.js":"1","D:\\Documentos\\Bootcamp\\recipi\\src\\reportWebVitals.js":"2","D:\\Documentos\\Bootcamp\\recipi\\src\\App\\App.js":"3","D:\\Documentos\\Bootcamp\\recipi\\src\\helpers.js":"4","D:\\Documentos\\Bootcamp\\recipi\\src\\components\\navbar\\Navbar.js":"5","D:\\Documentos\\Bootcamp\\recipi\\src\\components\\Contenedorgeneral\\Contenedorgeneral.js":"6"},{"size":521,"mtime":1611615736145,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1610757696184,"results":"9","hashOfConfig":"8"},{"size":954,"mtime":1612397324506,"results":"10","hashOfConfig":"8"},{"size":3269,"mtime":1612393949186,"results":"11","hashOfConfig":"8"},{"size":1497,"mtime":1612397391560,"results":"12","hashOfConfig":"8"},{"size":2622,"mtime":1612397297616,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vjaxpg",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"D:\\Documentos\\Bootcamp\\recipi\\src\\index.js",[],"D:\\Documentos\\Bootcamp\\recipi\\src\\reportWebVitals.js",[],"D:\\Documentos\\Bootcamp\\recipi\\src\\App\\App.js",["28"],"D:\\Documentos\\Bootcamp\\recipi\\src\\helpers.js",[],"D:\\Documentos\\Bootcamp\\recipi\\src\\components\\navbar\\Navbar.js",["29","30","31","32"],"D:\\Documentos\\Bootcamp\\recipi\\src\\components\\Contenedorgeneral\\Contenedorgeneral.js",["33"],"import React, { useLayoutEffect, useState } from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Contenedorgeneral.css\"\r\n\r\nconst Contenedorgeneral = () => {\r\n  // const [thumbnail, setThumbnail] = useState();\r\n  const [plato, setPlato] = useState();\r\n\r\n  useLayoutEffect(() => {\r\n    axios\r\n      .get(\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood\")\r\n      .then(function (response) {\r\n        // handle success\r\n        let dataReceta = response.data.meals;\r\n        setPlato(dataReceta);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const history =useHistory();\r\n  \r\n  // const  HomeButton = (id) => {\r\n  //   const history = useHistory();\r\n  \r\n  const handleClick = (id) => {\r\n    history.push(`/home/${id}`);\r\n  }\r\n  \r\n  //   return (\r\n  //     <button type=\"button\" onClick={handleClick}>\r\n  //       View\r\n  //     </button>\r\n  //   );\r\n  // }\r\n  // const goaddress = (id)=>{\r\n  //   let address =\"./home/\";\r\n  //   address+=id;\r\n  //   return address;\r\n  // }\r\n  return (\r\n    <main className=\"topnavbar\">\r\n      <div className=\"album py-5 bg-light\">\r\n        <div className=\"container\">\r\n          <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\" >\r\n              {plato === undefined ? (\r\n                <div>Cargando datos...</div>\r\n              ) : (\r\n                plato.map((elem) => {\r\n                  return (\r\n                    <div key={elem.strMeal} className=\"card shadow-sm\">\r\n                      <img src= {elem.strMealThumb} className=\"imagen\" alt={elem.strMeal}/>\r\n                      <div className=\"card-body\">\r\n                        <p className=\"card-text\">{elem.strMeal}</p>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                          <div className=\"btn-group\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-sm btn-outline-secondary\"\r\n                              onClick={()=>{handleClick(elem.idMeal)}}\r\n                            >\r\n                              View\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              )}\r\n            {/* <div className=\"col\">\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Contenedorgeneral;\r\n",["34","35"],{"ruleId":"36","severity":1,"message":"37","line":3,"column":50,"nodeType":"38","messageId":"39","endLine":3,"endColumn":59},{"ruleId":"36","severity":1,"message":"40","line":5,"column":10,"nodeType":"38","messageId":"39","endLine":5,"endColumn":23},{"ruleId":"36","severity":1,"message":"41","line":19,"column":13,"nodeType":"38","messageId":"39","endLine":19,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":33,"column":6,"nodeType":"44","endLine":33,"endColumn":8,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":43,"column":38,"nodeType":"48","endLine":43,"endColumn":49},{"ruleId":"36","severity":1,"message":"37","line":2,"column":21,"nodeType":"38","messageId":"39","endLine":2,"endColumn":30},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'getCategorias' is defined but never used.","'dataReceta' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["53"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["54"],"no-negated-in-lhs",["55"],{"desc":"56","fix":"57"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [state]",{"range":"58","text":"59"},[1009,1011],"[state]"]